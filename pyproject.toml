[build-system]
requires = ["scikit-build-core>=0.10", "pybind11"]
build-backend = "scikit_build_core.build"

[project]
name = "epiworldpy"
version = "0.6.0-0"
description = "Python bindings for epiworld"
readme = "README.md"
requires-python = ">=3.7"
dependencies = ["numpy"]

authors = [
    { name = "George G. Vega Yon", email = "g.vegayon@gmail.com" },
    { name = "Milo Banks", email = "milobanks@rowlandhall.org" },
]

classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]
test = ["pytest"]
doc = [
    "nbformat",
    "nbclient",
    "jupyter",
    "epiworldpy[viz]",
    "myst_parser",
    "sphinx-book-theme",
]
viz = [
    "ipympl>=0.8",
    "matplotlib>=3.5.0",
    "networkx>=3.0",
    "scipy>=1.0",
    "pandas>=2.1.0",
]

[tool.scikit-build.wheel]
expand-macos-universal-tags = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:(ast.Str|Attribute s|ast.NameConstant|ast.Num) is deprecated:DeprecationWarning:_pytest", # Python 3.12
]

[tool.cibuildwheel]
test-command = "pytest {project}/tests"
test-extras = ["test"]
test-skip = ["*universal2:arm64"]
build-verbosity = 1

[tool.ruff]
src = ["src"]

select = [
    "E",
    "F",
    "W",   # flake8
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]

extend-ignore = [
    "PLR",  # Design related pylint codes
    "E501", # Line too long
]

unfixable = [
    "T20",  # Removes print statements
    "F841", # Removes unused variables
]

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]
